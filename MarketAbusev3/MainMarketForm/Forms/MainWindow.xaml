<Window
        x:Class="MainMarketForm.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MainMarketForm"
        mc:Ignorable="d"
        FontSize="14" FontFamily="Segoe UI Light"
        Title="Market Abuse v3" Height="400" Width="500"
        Foreground="White"
        WindowStyle="None"
        UseLayoutRounding="True"
        ResizeMode="CanResize"
        SizeToContent="Width"
        MinWidth="750"
        MinHeight="200"
        WindowStartupLocation="CenterScreen"
        RenderOptions.BitmapScalingMode="HighQuality"
        Closed="Window_Closed"
        AllowsTransparency="True">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style x:Key="ContentButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="DockPanel.Dock" Value="Right"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#464646"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="#666666"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#464646"/>
            <Setter Property="BorderThickness" Value="5,1,1,1"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid>
                            <Border x:Name="HeaderBorder"
                                BorderThickness="0,1,0,1"
                                BorderBrush="#565656"
                                Background="#464646"
                                Padding="1,0,2,0">
                                <ContentPresenter x:Name="HeaderContent"
                                    Margin="0,0,0,1"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Thumb Style="{DynamicResource GridViewColumnHeaderGripper}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GridViewColumnHeaderGripper"
        TargetType="{x:Type Thumb}">
            <Setter Property="Canvas.Right" Value="-9" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="#565656" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                            <Rectangle HorizontalAlignment="Right"
                                Width="1"
                                Fill="{TemplateBinding Background}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxGlowRemover" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ClickableButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#565656"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#363636"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="27"/>
    </WindowChrome.WindowChrome>

    <Grid x:Name="MainGrid" Background="#464646">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="5" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!--
            Title Bar
        -->
        <Rectangle Fill="#262626" Grid.ColumnSpan="10"/>
        <TextBlock x:Name="Title" Grid.Column="1" Grid.ColumnSpan="10" Text="Market Abuse" TextAlignment="Center"
                   FontSize="20"/>

        <!--Title Buttons-->
        <StackPanel Grid.ColumnSpan="5" WindowChrome.IsHitTestVisibleInChrome="True" VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">

            <Button x:Name="MinimizeButton"
                    Style="{StaticResource ContentButton}">
                <Image Source="/Resources/Minimize.png" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
            </Button>
            <Button x:Name="MaximizeButton"
                    Style="{StaticResource ContentButton}">
                <Image Source="/Resources/Maximize.png" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
            </Button>
            <Button x:Name="CloseButton"
                    Style="{StaticResource ContentButton}">
                <Image Source="/Resources/Close.png" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
            </Button>
        </StackPanel>

        <!--List of Items-->
        <ListView x:Name="List" 
                  ItemsSource="{Binding Items}"
                  FontSize="14"
                  Margin="0"
                  Background="#464646"
                  Grid.Column="1"
                  Grid.Row="2"
                  Style="{StaticResource ListViewStyle1}">

            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border BorderBrush="#262626" BorderThickness="0" Background="#464646">
                                    <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border BorderBrush="#262626" BorderThickness="0" Background="#363636">
                                            <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border BorderBrush="#262626" BorderThickness="0" Background="#262626">
                                            <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>
                <GridView x:Name="itemGridView" ColumnHeaderContainerStyle="{DynamicResource ListHeader}">
                    <GridViewColumn Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding imageDirectory}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn x:Name="Item" Header="Item" Width="200" DisplayMemberBinding="{Binding name}" />
                    <GridViewColumn x:Name="buyPriceHeader" Header="Buy Price" Width="100" DisplayMemberBinding="{Binding buyPriceFormatted, StringFormat='{}{0:N0}'}"/>
                    <GridViewColumn x:Name="sellPriceHeader" Header="Sell Price" Width="100" DisplayMemberBinding="{Binding sellPriceFormatted, StringFormat='{}{0:N0}'}"/>
                    <GridViewColumn x:Name="buyingQuantityHeader" Header="Buying Quantity" Width="100" DisplayMemberBinding="{Binding buyQuantity, StringFormat='{}{0:N0}'}"/>
                    <GridViewColumn x:Name="sellingQuantityHeader" Header="Selling Quantity" Width="100" DisplayMemberBinding="{Binding sellQuantity, StringFormat='{}{0:N0}'}"/>
                    <GridViewColumn x:Name="marginHeader" Header="Margin" Width="100" DisplayMemberBinding="{Binding marginFormatted, StringFormat='{}{0:N0}'}"/>
                    <GridViewColumn x:Name="IDHeader" Header="ID" Width="55" DisplayMemberBinding="{Binding id, StringFormat='{}{0:N0}'}"/>
                    <GridViewColumn x:Name="membersHeader" Header="Members" Width="75" DisplayMemberBinding="{Binding members}"/>
                    <GridViewColumn x:Name="shortHandNameHeader" Header="SHN" Width="50" DisplayMemberBinding="{Binding shortHandName}"/>
                </GridView>
            </ListView.View>
        </ListView>


        <!--Search Bar-->
        <Border BorderBrush="#666666" BorderThickness="1" Grid.Row="1" Grid.Column="1" Margin="0,5,0,0">
            <Grid Width="auto" Margin="5">
                <TextBox x:Name="SearchBox" Text="Search" Style="{DynamicResource TextBoxGlowRemover}"/>
            </Grid>
        </Border>

        <!--Sort Methods-->
        <Border BorderBrush="#666666" BorderThickness="1" Grid.Row="3" Grid.Column="1" Margin="0">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Sort Method: " Margin="0,2,0,0"/>
                <ComboBox x:Name="SortMethod" Width="150" Grid.Column="1"/>

                <Button x:Name="SortDirection" Grid.Column="3" Style="{DynamicResource ClickableButton}">
                    <Image x:Name="sortPicture" Source="/Resources/UpArrow.png" Tag="up"/>
                </Button>
                <Button x:Name="SortSettings" Grid.Column="4" Style="{DynamicResource ClickableButton}">
                    <Image Source="/Resources/Settings.png"/>
                </Button>
            </Grid>
        </Border>

        <!--
            Information at the bottom
        -->
        <Rectangle Fill="#FF282828" Grid.Row="4" Grid.ColumnSpan="10"/>
        <TextBlock x:Name="RefreshLabel" Text="Last Refreshed: 0 second(s) ago"
                   Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="5"/>

        <TextBlock x:Name="name" Text="Created by: Sicryption " 
                   Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"
                   TextAlignment="Right" Foreground="White"/>
        
        <Button x:Name="ProgramSettings" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="5" Style="{DynamicResource ClickableButton}">
            <Image Source="/Resources/Settings.png"/>
        </Button>
    </Grid>
</Window>
